"use strict";
var helpers = require("../node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);
try {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports["default"] = void 0;
  var _react = require("react");
  var _useBreedList3 = _interopRequireDefault(require("./useBreedList"));
  var _Results = _interopRequireDefault(require("./Results"));
  var _jsxRuntime = require("react/jsx-runtime");
  var _s2 = $RefreshSig$();
  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
      "default": obj
    };
  }
  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
    try {
      var info = gen[key](arg);
      var value = info.value;
    } catch (error) {
      reject(error);
      return;
    }
    if (info.done) {
      resolve(value);
    } else {
      Promise.resolve(value).then(_next, _throw);
    }
  }
  function _asyncToGenerator(fn) {
    return function () {
      var self = this, args = arguments;
      return new Promise(function (resolve, reject) {
        var gen = fn.apply(self, args);
        function _next(value) {
          asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
        }
        function _throw(err) {
          asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
        }
        _next(undefined);
      });
    };
  }
  function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
  }
  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || (/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/).test(n)) return _arrayLikeToArray(o, minLen);
  }
  function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;
    for (var i = 0, arr2 = new Array(len); i < len; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  }
  function _iterableToArrayLimit(arr, i) {
    var _i = arr && (typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]);
    if (_i == null) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _s, _e;
    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);
        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }
    return _arr;
  }
  function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
  }
  var ANIMALS = ["bird", "cat", "dog", "rabbit", "reptile"];
  var SearchParams = function SearchParams() {
    _s2();
    var _useState = (0, _react.useState)(""), _useState2 = _slicedToArray(_useState, 2), location = _useState2[0], setLocation = _useState2[1];
    var _useState3 = (0, _react.useState)(""), _useState4 = _slicedToArray(_useState3, 2), animal = _useState4[0], setAnimal = _useState4[1];
    var _useState5 = (0, _react.useState)(""), _useState6 = _slicedToArray(_useState5, 2), breed = _useState6[0], setBreed = _useState6[1];
    var _useState7 = (0, _react.useState)([]), _useState8 = _slicedToArray(_useState7, 2), pets = _useState8[0], setPets = _useState8[1];
    var _useBreedList = (0, _useBreedList3["default"])(animal), _useBreedList2 = _slicedToArray(_useBreedList, 1), breeds = _useBreedList2[0];
    (0, _react.useEffect)(function () {
      requestPets();
    }, []);
    // eslint-disable-line react-hooks/exhaustive-deps
    function requestPets() {
      return _requestPets.apply(this, arguments);
    }
    function _requestPets() {
      _requestPets = _asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var res, json;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return fetch(("http://pets-v2.dev-apis.com/pets?animal=").concat(animal, "&location").concat(location, "&breed=").concat(breed));
              case 2:
                res = _context.sent;
                _context.next = 5;
                return res.json();
              case 5:
                json = _context.sent;
                setPets(json.pets);
              case 7:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));
      return _requestPets.apply(this, arguments);
    }
    // function updateLocation(e) {
    // setLocation(e.target.value);
    // }
    return (
      /*#__PURE__*/(0, _jsxRuntime.jsxs)("div", {
        className: "search-params",
        children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("form", {
          onSubmit: function onSubmit(e) {
            e.preventDefault();
            requestPets();
          },
          children: [/*#__PURE__*/(0, _jsxRuntime.jsxs)("label", {
            htmlFor: "location",
            children: ["Location", /*#__PURE__*/(0, _jsxRuntime.jsx)("input", {
              id: "location",
              onChange: function onChange(e) {
                return setLocation(e.target.value);
              },
              /*onChange={updateLocation}*/
              value: location,
              placeholder: "location"
            })]
          }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("label", {
            htmlFor: "animal",
            children: ["Animal", /*#__PURE__*/(0, _jsxRuntime.jsxs)("select", {
              value: animal,
              id: "animal",
              onChange: function onChange(e) {
                return setAnimal(e.target.value);
              },
              onBlur: function onBlur(e) {
                return setAnimal(e.target.value);
              },
              children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("option", {}), ANIMALS.map(function (animal) {
                return (
                  /*#__PURE__*/(0, _jsxRuntime.jsx)("option", {
                    value: animal,
                    children: animal
                  }, animal)
                );
              })]
            })]
          }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("label", {
            htmlFor: "breed",
            children: ["Breed", /*#__PURE__*/(0, _jsxRuntime.jsxs)("select", {
              value: breed,
              id: "animal",
              onChange: function onChange(e) {
                return setBreed(e.target.value);
              },
              onBlur: function onBlur(e) {
                return setBreed(e.target.value);
              },
              children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("option", {}), breeds.map(function (breed) {
                return (
                  /*#__PURE__*/(0, _jsxRuntime.jsx)("option", {
                    value: breed,
                    children: breed
                  }, breed)
                );
              })]
            })]
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)("button", {
            children: "Submit"
          })]
        }), /*#__PURE__*/(0, _jsxRuntime.jsx)(_Results["default"], {
          pets: pets
        })]
      })
    );
  };
  _s2(SearchParams, "k7QLqm1tkRL/Qk3zs8sj+lAdw9o=", false, function () {
    return [_useBreedList3["default"]];
  });
  _c = SearchParams;
  var _default = SearchParams;
  exports["default"] = _default;
  var _c;
  $RefreshReg$(_c, "SearchParams");
  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}
